@model Aion.Areas.Admin.ViewModels.Recruitment.ReviewPendingVm

@{
    ViewBag.Title = "Review Pending";
}

<div class="modal fade" id="commentsModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Rejection comments</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="commentsModalBody">
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button id="modalSubmit" type="button" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row p-1">
        <a href="@Url.Action("Index","Recruitment")" class="btn btn-link"><i class="icon ion-arrow-left-b"></i> Back</a>
    </div>
    <div class="card mb-3">
        <div class="card-header text-center">
            <strong>Current Position</strong>
        </div>
        <div class="card-body">
            <table class="table table-bordered table-sm table-smtxtperm text-center">
                <thead>
                    <tr>
                        <th>Position</th>
                        @if (Model.PositionDetail.ContractBase == 0)
                        {
                            <th>Total Base</th>
                            <th>Current Base</th>
                        }
                        else
                        {
                            <th>Contract Base</th>
                            <th>Current Contract</th>
                        }
                        <th>Average Contract</th>
                        <th>
                            Open Vacancies<br />
                            <small>Including this one</small>
                        </th>
                        <th>New Total</th>
                    </tr>

                </thead>
                <tbody>
                    <tr>
                        <td>@Model.PositionDetail.FriendlyName</td>
                        @if (Model.PositionDetail.ContractBase == 0)
                        {
                            <td>@string.Format("{0:C}", Model.PositionDetail.TotalBase)</td>
                            <td>@string.Format("{0:C}", Model.PositionDetail.CurrentBase - Model.PositionDetail.OpenVacancies)</td>
                        }
                        else
                        {
                            <td>@Model.PositionDetail.ContractBase</td>
                            <td>@string.Format("{0:0.00}", Model.PositionDetail.CurrentContract)</td>
                        }
                        <td>@string.Format("{0:0.00}", Model.PositionDetail.AverageContract)</td>
                        @if (Model.PositionDetail.ContractBase == 0)
                        {
                            <td>@string.Format("{0:C}", Model.VacancyRequests.First().Replace ? Model.VacancyRequests.Sum(x => x.Heads * x.ContractHrs * x.VacancyPosition.RateOfPay) : Model.PositionDetail.OpenVacancies)</td>
                        } 
                        else
                        {
                            <td>@string.Format("{0:0.00}", Model.VacancyRequests.First().Replace ? Model.VacancyRequests.Sum(x => x.Heads * x.ContractHrs) : Model.PositionDetail.OpenVacancies / Model.PositionDetail.RateOfPay)</td>
                        }
                        @if (Model.PositionDetail.ContractBase == 0)
                        {
                            <td>@string.Format("{0:C}", (Model.PositionDetail.CurrentContract == 0 ? Model.PositionDetail.CurrentBase - (Model.VacancyRequests.First().Replace ? Model.VacancyRequests.Sum(x => x.Heads * x.ContractHrs * x.VacancyPosition.RateOfPay) : 0) : Model.PositionDetail.CurrentContract - (Model.VacancyRequests.First().Replace ? Model.VacancyRequests.Sum(x => x.Heads * x.ContractHrs) : 0)))</td>
                        }
                        else
                        {
                            <td>@string.Format("{0:0.00}", Model.PositionDetail.CurrentContract + (Model.VacancyRequests.First().Replace ? Model.VacancyRequests.Sum(x => x.Heads * x.ContractHrs) : Model.PositionDetail.OpenVacancies / Model.PositionDetail.RateOfPay))</td>
                        }
                    </tr>
                </tbody>
            </table>
            <h4>MyHub Detail <button id="HRShow" class="btn btn-info btn-sm ml-2"><i class="icon ion-plus-round m-1"></i></button></h4>
            <div id="HRDetail" style="display:none;">
                <div class="table-responsive" style="max-height:300px;">
                    <table class="table table-bordered table-sm table-smtxtperm text-center mb-3">
                        <thead>
                            <tr class="thead-light">
                                <th colspan="4">
                                    <strong>Current Records</strong>
                                </th>
                            </tr>
                            <tr>
                                <th>PersonID</th>
                                <th>Name</th>
                                <th>Job Title</th>
                                <th>Contract Hrs</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.HRCurrent)
                            {
                                <tr>
                                    <td>@item.Alternate_ID</td>
                                    <td>@string.Format("{0}, {1}", item.Last_Name, item.First_Name.Substring(0, 1))</td>
                                    <td>@item.Job_Title</td>
                                    <td>@item.Std_Hrs_Wk</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @if (Model.HRChanges.Count > 0)
                {
                    <div class="table-responsive" style="max-height:300px;">
                        <table class="table table-bordered table-sm table-smtxtperm text-center mb-3">
                            <thead>
                                <tr class="thead-light">
                                    <th colspan="5">
                                        <strong>Future Changes</strong>
                                    </th>
                                </tr>
                                <tr>
                                    <th>PersonID</th>
                                    <th>Name</th>
                                    <th>Job Title</th>
                                    <th>Contract Hrs</th>
                                    <th>Effective Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.HRChanges)
                                {
                                    <tr>
                                        <td>@item.Alternate_ID</td>
                                        <td>@string.Format("{0}, {1}", item.Last_Name != null ? item.Last_Name : "null", item.First_Name != null ? item.First_Name.Substring(0, 1) : "null")</td>
                                        <td>@item.Job_Title</td>
                                        <td>@item.Std_Hrs_Wk</td>
                                        <td>@item.Effective_Date_of_Change</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="card mb-3">
        <div class="card-header text-center">
            <strong>Requests</strong>
        </div>
        <div class="card-body">
            <h5>@string.Format("{0} - {1}", Model.RecruitmentDetail.FirstOrDefault().StoreNumber, Model.RecruitmentDetail.First().StoreName)</h5>
            @if (Model.VacancyRequests.FirstOrDefault().PostedBy == "On Hold")
            {
                <div class="row justify-content-center">
                    <strong style="font-size:large;" class="text-warning">On Hold Since: @Model.VacancyRequests.FirstOrDefault().PostedDate</strong>
                </div>
            }
            <table id="requestTbl" class="table table-bordered table-sm table-smtxtperm text-center mb-2">
                <thead>
                    <tr>
                        <th>Ref#</th>
                        <th>Position</th>
                        <th>Heads</th>
                        <th>ContractHrs</th>
                        <th>Total</th>
                        <th>Replace</th>
                        <th>Raised By</th>
                        <th>Raised Date</th>
                        <th>Approve</th>
                        <th>Reject</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.VacancyRequests)
                    {
                        <tr>
                            <td>@item.EntryId</td>
                            <td>@item.VacancyPosition.FriendlyName</td>
                            <td>@item.Heads</td>
                            <td>@item.ContractHrs</td>
                            @if (Model.PositionDetail.ContractBase == 0)
                            {
                                <td>@string.Format("{0:C}", item.Heads * item.ContractHrs * item.VacancyPosition.RateOfPay)</td>
                            }
                            else
                            {
                                <td>@(item.Heads * item.ContractHrs)</td>
                            }
                            <td>@(item.Replace ? "Yes" : "No")</td>
                            <td>@item.RaisedBy</td>
                            <td>@item.RaisedDate.ToShortDateString()</td>
                            <td>
                                <input class="approve checkbox" type="checkbox" value="" data-entryid="@item.EntryId" />
                            </td>
                            <td>
                                <input class="reject checkbox" type="checkbox" value="" data-entryid="@item.EntryId" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <form id="frm" method="post" class="d-none">
                @for (int i = 0; i < Model.VacancyRequests.Count; i++)
                {
                    <div id="r@(Model.VacancyRequests[i].EntryId)" class="approvalRow">
                        <input class="entryid" name="r[@(i)].EntryId" value="@(Model.VacancyRequests[i].EntryId)" hidden />
                        <input class="approvalstatus" name="r[@(i)].ApprovalStatus" value="" hidden />
                        <input class="notes" name="r[@(i)].Note" value="" hidden />
                    </div>
                }
            </form>
            <form id="frmHold" method="post" class="d-none" action="/Admin/Recruitment/HoldPending">
                <input name="Chain" value="@Model.VacancyRequests.FirstOrDefault().Chain" />
                <input name="StoreNumber" value="@Model.VacancyRequests.FirstOrDefault().StoreNumber" />
                <input name="PositionCode" value="@Model.VacancyRequests.FirstOrDefault().PositionCode" />
            </form>
            <div class="row justify-content-center">
                <button id="btnHold" type="button" role="button" class="btn btn-warning">Put On Hold</button>
                <button id="frmSubmit" type="button" role="button" class="btn btn-success ml-3">Update</button>
            </div>
            @if (Model.UniqueComments.Any())
            {
                <strong>Supporting Comments:</strong>
                <p class="border border-left p-2 mt-1 rounded">
                    @foreach (var item in Model.UniqueComments)
                {
                        <span>@item</span>
                    }
                </p>
            }
            <hr />
            <div class="row">
                <div class="col-12">
                    <div class="wf-comment-container">
                        <div class="text-center mb-2"><button class="btn btn-info" id="addComment">Add Comment</button></div>
                        <div style="display:none; width:100%;" id="newCommentContainer">
                            <div class="form-group">
                                <textarea class="w-100" type="text" id="newComment"></textarea>
                            </div>
                            <div class="text-center">
                                <button id="submitComment" class="btn btn-primary btn-sm">Submit</button>
                            </div>
                            <hr />
                        </div>
                        @if (Model.HOComments.Count > 0)
                        {
                            foreach (var item in Model.HOComments.OrderByDescending(x => x.EnteredOn))
                            {
                                <div class="wf-comment">
                                    <div class="wf-comment-body">
                                        <p class="text-muted" style="font-size:small">@Html.Raw(string.Format("Added {0:g} by <strong>{1}</strong>", item.EnteredOn, item.EnteredBy))</p>
                                        <p>@item.Comment</p>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="wf-comment" id="noComments">
                                <div class="wf-comment-body">
                                    <p class="text-muted" style="font-size:small">No comments yet...</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row p-1">
        <a href="@Url.Action("Index","Recruitment")" class="btn btn-link"><i class="icon ion-arrow-left-b"></i> Back</a>
    </div>
</div>

@section myScripts{
    <script>
        $(function () {
            var $comCont = $('#newCommentContainer');
            var $comVal = $('#newComment');
            var hrHidden = true;

            $('#addComment').click(function () {
                $comCont.slideToggle(400);
            });

            $('#submitComment').click(function () {
                if ($comVal.val()) {
                    $.post('/Admin/Recruitment/_PostNewComment', { commentText: $comVal.val() }, function (result) {
                        $comCont.after(result);
                        $('#noComments').remove();
                        $comCont.next().slideToggle(400);
                    });
                    $comCont.slideToggle(400);
                    $comVal.val('');
                }
            });

            $('.approve').click(function () {
                if ($(this).is(":checked")) {
                    $(this).parent().parent().find('.reject').prop('checked', false);
                    $('#r' + $(this).data('entryid')).find('.approvalstatus').val('a');
                }
                else {
                    $('#r' + $(this).data('entryid')).find('.approvalstatus').val('');
                };
            });

            $('.reject').click(function () {
                if ($(this).is(":checked")) {
                    $(this).parent().parent().find('.approve').prop('checked', false);
                    $('#r' + $(this).data('entryid')).find('.approvalstatus').val('r');
                }
                else {
                    $('#r' + $(this).data('entryid')).find('.approvalstatus').val('');
                };
            })

            $('#frmSubmit').click(function () {
                if ($('#requestTbl input[type="checkbox"]:checked').length) {
                    var comments = false;
                    $('#commentsModalBody').html('');
                    $('#frm').find('.approvalRow').each(function () {
                        var approvalState = $(this).find('.approvalstatus').val();
                        if (approvalState === 'r') {
                            var entryId = $(this).find('.entryid').val();
                            $('#commentsModalBody').append('<div class="cRow"><label data-ref="' + entryId + '">Reference# ' + entryId + '</label><select class="cSelect form-control mb-2" data-ref="' + entryId + '"><option selected value="0">Select Template</option><option value="1">Over Base</option><option value="2">Something Else</option><option value="3">Another thing</option></select><textarea class="form-control" id="c' + entryId + '"></textarea></div>');
                            comments = true;
                        };
                    });

                    if (comments) {
                        $('#commentsModal').modal('toggle');
                    } else {
                        $('#frm').submit();
                    }
                };
            });

            $('#commentsModalBody').on('change', 'select', function () {
                if ($(this).val() != 0) {
                    var entryId = $(this).data('ref');
                    console.log(entryId);
                    switch ($(this).val()) {
                        case "1":
                            $('#c' + entryId).val('Over your base');
                            break;
                        case "2":
                            $('#c' + entryId).val('Something else to say');
                            break;
                        case "3":
                            $('#c' + entryId).val('One last thing');
                            break;
                    };
                };
            });

            $('#btnHold').click(function () {
                $('#frmHold').submit();
            });

            $('#modalSubmit').click(function () {
                var valid = true;
                $('#commentsModalBody').find('.cRow').each(function () {
                    if ($(this).find('textarea').val().length) {
                        console.log('#r' + $(this).find('label').data('ref'));
                        $('#r' + $(this).find('label').data('ref')).find('.notes').val($(this).find('textarea').val());
                        $(this).find('textarea').removeClass('border-danger');
                    } else {
                        $(this).find('textarea').addClass('border-danger');
                        valid = false;
                    };
                });

                if (valid) {
                    $('#frm').submit();
                };
            });

            $('#HRShow').click(function () {
                if (hrHidden) {
                    $(this).html('<i class="icon ion-minus-round m-1"></i>');
                    hrHidden = false;
                }
                else {
                    $(this).html('<i class="icon ion-plus-round m-1"></i>');
                    hrHidden = true;
                };
                $('#HRDetail').slideToggle();
            });
        });
    </script>
}