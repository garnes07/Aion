@using Aion.ViewModels
@model Aion.Areas.WFM.ViewModels.Deployment.TOWSummaryVm

@{
    ViewBag.Title = "Top 100 Weekend";

    Func<string, string> GetRAGClass = (i) =>
    {
        switch (i)
        {
            case "R":
                return "table-danger";
            case "A":
                return "table-warning";
            default:
                return "table-success";
        }
    };
}

<div class="container-fluid">
    @if (Request.IsAuthenticated)
    {
        <div class="row justify-content-end mb-2">
            <div>
                @Html.Partial("~/Views/Shared/_selectMenu.cshtml")
            </div>
        </div>
    }
    @*<div class="card">
        <div class="card-header text-center">
            <strong>Every Customer Credits</strong>
        </div>
        <div class="card-body">
            <p>Stuff...</p>
        </div>
    </div>*@

    @Html.Partial("~/Views/Shared/_WeekPicker.cshtml", new WeekPickerVm { Action = "TOWSummary", Controller = "Deployment", WeeksOfYear = Model.WeeksOfYear, SelectedDate = Model.SelectedDate })

    <p class="text-center"><strong><u>Note: This report is updated at 7AM, 9AM, 12PM and 3PM each day</u></strong></p>

    <table class="table table-bordered table-sm table-smtxtperm">
        <thead class="thead-blue text-center">
            <tr>
                <th rowspan="2">Division</th>
                <th rowspan="2">Region</th>
                <th rowspan="2">Store</th>
                <th colspan="5">Sunday <small>(@Model.SundayDate)</small></th>
                <th colspan="5">Saturday <small>(@Model.SaturdayDate)</small></th>
                <th colspan="2">Overall</th>
            </tr>
            <tr>
                <th>Normal<br />Hours<br />Required</th>
                <th>Extra<br />Credit<br />Available</th>
                <th>Actual<br />Hours</th>
                <th>Actual Credit<br />Used</th>
                <th>RAG</th>
                <th>Normal<br />Hours<br />Required</th>
                <th>Extra<br />Credit<br />Available</th>
                <th>Actual<br />Hours</th>
                <th>Actual Credit<br />Used</th>
                <th>RAG</th>
                <th>RAG</th>
                <th>To <br />Budget</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.collection)
            {
                <tr class="text-center">
                    <td>@item.Division</td>
                    <td>@item.Region</td>
                    <td class="text-left"><a class="clickthrough" data-selector="@item.StoreNumber" href="@Url.Action("Detail","Deployment", new { area = "WFM", s = "S_" + item.StoreNumber, selectedDate = Model.SelectedDate ?? "Next Week"})">@string.Format("{0} - {1}", item.StoreNumber, item.StoreName)</a></td>
                    <td>@item.SundayReq</td>
                    <td>@item.SundayAvailable</td>
                    <td>@item.SundayDeployed</td>
                    <td>@item.SundayCredit</td>
                    <td class="@GetRAGClass(item.SundayRAG)">@item.SundayRAG</td>
                    <td >@item.SaturdayReq</td>
                    <td >@item.SaturdayAvailable</td>
                    <td >@item.SaturdayDeployed</td>
                    <td >@item.SaturdayCredit</td>
                    <td class="@GetRAGClass(item.SaturdayRAG)">@item.SaturdayRAG</td>
                    <td class="@GetRAGClass(item.TotalRAG)">@item.TotalRAG</td>
                    <td>@string.Format("{0:0.0}%", item.SOH / item.FinalTarget * 100)</td>
                </tr>
            }
        </tbody>
    </table>
</div>