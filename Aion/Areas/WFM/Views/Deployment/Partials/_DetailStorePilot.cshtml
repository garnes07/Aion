@model Aion.Areas.WFM.ViewModels.Deployment.DeploymentDetailPilotVm

@{
    DateTime Today = DateTime.Today;;
}

@if (Model.StoreData.FinalTarget == null)
{
    <div class="alert alert-danger text-center"><strong>Budgets for the selected period have not yet been finalised, check back once you have received more information.</strong></div>
}
@if (Model.StoreData.TotalHeadCount == null)
{
<p class="text-center"><strong><u>Note: This report is updated at 7AM, 9AM, 12PM and 3PM each day</u></strong></p>
}

<div class="card mb-3">
    <div class="card-header text-center">
        <strong>Budget Fit</strong>
    </div>
    <div class="card-body">
        @if (Model.StoreData.IgniteCredits != 0 && Model.StoreData.TotalHeadCount == null)
        {
            <div class="alert alert-success">
                This week you will be credited <strong>@(Model.StoreData.IgniteCredits)</strong> hours for Ignite training.
            </div>
        }
        else if (Model.StoreData.IgniteCredits != 0)
        {
            <div class="alert alert-success">
                This week you were credited <strong>@(Model.StoreData.IgniteCredits) hours</strong> for Ignite training, this has been removed from the SOH spend shown below.
            </div>
        }

        <div class="row justify-content-center">
            <div class="col-12">
                <table class="table table-bordered table-sm" style="table-layout: fixed;">
                    <thead class="thead-blue">
                    <tr>
                        <th class="text-center col-md-3">SOH Spend</th>
                        <th class="text-center col-md-3">SOH Budget</th>
                        <th class="text-center col-md-3">Variance</th>
                        <th class="text-center col-md-3">Deployment Score</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td class="text-center">@string.Format("{0:0.0}", Model.StoreData.SOH)</td>
                        <td class="text-center">@string.Format("{0:0.0}", Model.StoreData.FinalTarget)</td>
                        <td class="text-center">@string.Format("{0:0.0}", (Model.StoreData.SOH - Model.StoreData.FinalTarget)) </td>
                        <td class="text-center">
                            @for (int i = 1; i <= Model.StoreData.SOHUtilization; i++)
                            {
                                <i class="icon ion-android-star"></i>
                            }
                            @for (int i = 1; i <= 5 - Model.StoreData.SOHUtilization; i++)
                            {
                                <i class="icon ion-android-star-outline"></i>
                            }
                        </td>

                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
        @*<div class="col-12">
            <div class="box-body">
                <div class="chart">
                    <canvas id="spend-bar-chart" style="height:200px"></canvas>
                </div>
            </div>
        </div>*@
        <p>The deployment score given is from <strong>0</strong> to <strong>5</strong> based on the variation between the SOH target and the SOH spend. 1 point is lost for every 2.5% <u>underspent</u>.</p>
    </div>
</div>

<div class="card mb-3">
    <div class="card-header text-center">
        <strong>Customer Fit</strong>
    </div>
    <div class="card-body">
        <table class="table table-bordered table-sm">
            <thead class="thead-blue">
                <tr>
                    <th class="col-xs-3 text-center">Total Required</th>
                    <th class="col-xs-3 text-center">Total Unders</th>
                    <th class="col-xs-3 text-center">Score</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="text-center">@Model.TotalRequired</td>
                    <td class="text-center">@Model.TotalUnders</td>
                    <td class="text-center">
                        @for (int i = 1; i <= Model.CustomerFitScore; i++)
                        {
                            <span class="icon ion-android-star"></span>
                        }
                        @for (int i = 1; i <= 5 - Model.CustomerFitScore; i++)
                        {
                            <span class="icon ion-android-star-outline"></span>
                        }
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="col-12 text-center">
            <div><strong><u>Note:</u> Rounding in the below calculation may result in small variations in the total hours.</strong></div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="deployment-bar-chart" style="height:250px"></canvas>
                </div>
            </div>
        </div>
        <table class="table table-bordered table-sm">
            <thead class="thead-blue">
            <tr>
                <th class="text-center" style="width:30%;"></th>
                <th class="text-center" style="width:10%;">Sun</th>
                <th class="text-center" style="width:10%;">Mon</th>
                <th class="text-center" style="width:10%;">Tue</th>
                <th class="text-center" style="width:10%;">Wed</th>
                <th class="text-center" style="width:10%;">Thu</th>
                <th class="text-center" style="width:10%;">Fri</th>
                <th class="text-center" style="width:10%;">Sat</th>
            </tr>
            </thead>
            <tbody>
            <tr style="background-color: #d5dbf6">
                <td>This is where you should put your hours</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.SundayReq)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.MondayReq)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.TuesdayReq)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.WednesdayReq)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.ThursdayReq)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.FridayReq)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.SaturdayReq)</td>
            </tr>
            <tr style="background-color: #d6f3f5">
                <td>This is where you've currently put your hours</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.SundayDeployed)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.MondayDeployed)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.TuesdayDeployed)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.WednesdayDeployed)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.ThursdayDeployed)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.FridayDeployed)</td>
                <td class="text-center">@string.Format("{0:0}", Model.DailyData.SaturdayDeployed)</td>
            </tr>
            <tr>
                <td>This is what you need to do</td>
                <td class="text-center">@Model.GetAdvice(Model.DailyData.SundayMove)</td>
                <td class="text-center">@Model.GetAdvice(Model.DailyData.MondayMove)</td>
                <td class="text-center">@Model.GetAdvice(Model.DailyData.TuesdayMove)</td>
                <td class="text-center">@Model.GetAdvice(Model.DailyData.WednesdayMove)</td>
                <td class="text-center">@Model.GetAdvice(Model.DailyData.ThursdayMove)</td>
                <td class="text-center">@Model.GetAdvice(Model.DailyData.FridayMove)</td>
                <td class="text-center">@Model.GetAdvice(Model.DailyData.SaturdayMove)</td>
            </tr>
            </tbody>
        </table>
        <div>
            <p>Customer fit focuses on spreading the hours well across days of the week, again only looking at where you're short and there is opportunity.</p>
            <p>
                An allowance is given in your weekly budget for out of store hours, to account for this we take 2.5% off your week's budget plus an additional 9 hours before calculating your score.<br />
                Your customer fit score is then calculated by totalling your daily unders and dividing by your adjusted weekly budget, you will lose 1 point out of a maximum 5 for every 2.5% under
            </p>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header text-center">
        <strong>Power Hours</strong>
    </div>
    <div class="card-body">
        <table id="powerHours" class="table table-bordered table-sm table-sm-smtxt text-center col-12" style="table-layout:fixed;">
            <thead class="thead-blue">
                <tr>
                    <th class="text-center"></th>
                    <th class="text-center">8</th>
                    <th class="text-center">9</th>
                    <th class="text-center">10</th>
                    <th class="text-center">11</th>
                    <th class="text-center">12</th>
                    <th class="text-center">13</th>
                    <th class="text-center">14</th>
                    <th class="text-center">15</th>
                    <th class="text-center">16</th>
                    <th class="text-center">17</th>
                    <th class="text-center">18</th>
                    <th class="text-center">19</th>
                    <th class="text-center">20</th>
                    <th class="text-center">21</th>
                    <th class="text-center">22</th>
                    <th class="text-center">23</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.PowerHours)
                {
                    <tr>
                        <td>@Model.GetName(item.Days)</td>
                        <td>@string.Format("{0:0.0%}", item.C08_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C09_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C10_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C11_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C12_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C13_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C14_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C15_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C16_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C17_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C18_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C19_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C20_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C21_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C22_TP)</td>
                        <td>@string.Format("{0:0.0%}", item.C23_TP)</td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>