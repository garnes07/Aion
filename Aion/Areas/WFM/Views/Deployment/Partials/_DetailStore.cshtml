@model Aion.Areas.WFM.ViewModels.Deployment.DeploymentDetailVm

@{
    DateTime Today = DateTime.Today;;
}

@if (Model.StoreData.FinalTarget == null)
{
    <div class="alert alert-danger text-center"><strong>Budgets for the selected period have not yet been finalised, check back once you have received more information.</strong></div>
}
@if (Model.StoreData.TotalHeadCount == null)
{
<p class="text-center"><strong>@(string.Format("Last Update: {0}", Today.AddHours(1).ToString())) &emsp; @(string.Format("Next Update: {0}", Today.AddDays(1).AddHours(1).ToString()))</strong></p>
}

<div class="card mb-3">
    <div class="card-header text-center">
        <strong>Deployment - Sales Fit</strong>
    </div>
    <div class="card-body">
        @if (Model.StoreData.IgniteCredits != 0 && Model.StoreData.TotalHeadCount == null)
        {
            <div class="alert alert-success">
                This week you will be credited <strong>@(Model.StoreData.IgniteCredits)</strong> hours for Ignite training.
            </div>
        }
        else if (Model.StoreData.IgniteCredits != 0)
        {
            <div class="alert alert-success">
                This week you were credited <strong>@(Model.StoreData.IgniteCredits) hours</strong> for Ignite training, this has been removed from the SOH spend shown below.
            </div>
        }

        <div class="row justify-content-center">
            <div class="col-12">
                <table class="table table-bordered table-sm" style="table-layout: fixed;">
                    <thead class="thead-blue">
                    <tr>
                        <th class="text-center col-md-3">SOH Spend</th>
                        <th class="text-center col-md-3">SOH Budget</th>
                        <th class="text-center col-md-3">Variance</th>
                        <th class="text-center col-md-3">Deployment Score</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td class="text-center">@string.Format("{0:0.0}", Model.StoreData.SOH)</td>
                        <td class="text-center">@string.Format("{0:0.0}", Model.StoreData.FinalTarget)</td>
                        <td class="text-center">@string.Format("{0:0.0}", (Model.StoreData.SOH - Model.StoreData.FinalTarget)) </td>
                        <td class="text-center @(Model.GetColor(Model.StoreData.SOHUtilization)))">@Model.StoreData.SOHUtilization</td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-12">
            <div class="box-body">
                <div class="chart">
                    <canvas id="spend-bar-chart" style="height:200px"></canvas>
                </div>
            </div>
        </div>
        <p>The deployment score given is from <strong>0</strong> to <strong>10</strong> based on the variation between the SOH target and the SOH spend. 2 points are lost for every 5% away from 100% deployment of weekly SOH hours.</p>
    </div>
</div>

@if (Model.DailyData.Count > 0)
{
    <div class="card">
        <div class="card-header text-center">
            <strong>Daily Deployment - Customer Fit</strong>
        </div>
        <div class="card-body">
            <div class="col-12 text-center">
                <div><strong><u>Note:</u> Rounding in the below calculation may result in small variations in the total hours.</strong></div>
                <div class="box-body">
                    <div class="chart">
                        <canvas id="deployment-bar-chart" style="height:250px"></canvas>
                    </div>
                </div>
            </div>
            <table class="table table-bordered table-sm">
                <thead class="thead-blue">
                    <tr>
                        <th class="text-center" style="width:30%;"></th>
                        <th class="text-center" style="width:10%;">Sun</th>
                        <th class="text-center" style="width:10%;">Mon</th>
                        <th class="text-center" style="width:10%;">Tue</th>
                        <th class="text-center" style="width:10%;">Wed</th>
                        <th class="text-center" style="width:10%;">Thu</th>
                        <th class="text-center" style="width:10%;">Fri</th>
                        <th class="text-center" style="width:10%;">Sat</th>
                    </tr>
                </thead>
                <tbody>
                    <tr style="background-color: #d5dbf6">
                        <td>This is where you should put your hours</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.SundayReq * 100)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.MondayReq * 100)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.TuesdayReq * 100)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.WednesdayReq * 100)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.ThursdayReq * 100)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.FridayReq * 100)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.SaturdayReq * 100)</td>
                    </tr>
                    <tr style="background-color: #d6f3f5">
                        <td>This is where you've currently put your hours</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.SundayDeployed)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.MondayDeployed)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.TuesdayDeployed)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.WednesdayDeployed)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.ThursdayDeployed)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.FridayDeployed)</td>
                        <td class="text-center">@string.Format("{0:0}%", Model.StoreDailyData.SaturdayDeployed)</td>
                    </tr>
                    <tr>
                        <td>This is what you need to do</td>
                        <td class="text-center">@Model.GetAdvice(Model.StoreDailyData.SundayMove)</td>
                        <td class="text-center">@Model.GetAdvice(Model.StoreDailyData.MondayMove)</td>
                        <td class="text-center">@Model.GetAdvice(Model.StoreDailyData.TuesdayMove)</td>
                        <td class="text-center">@Model.GetAdvice(Model.StoreDailyData.WednesdayMove)</td>
                        <td class="text-center">@Model.GetAdvice(Model.StoreDailyData.ThursdayMove)</td>
                        <td class="text-center">@Model.GetAdvice(Model.StoreDailyData.FridayMove)</td>
                        <td class="text-center">@Model.GetAdvice(Model.StoreDailyData.SaturdayMove)</td>
                    </tr>
                </tbody>
            </table>
            <div>
                <p>Customer fit simply looks at how well you're deploying the hours you're using in store. So you might be using less or more than your available budget, but it will still help you understand if you're making best use of these hours.</p>
                <p>It simply rates your scheduled/deployed hours by looking at how they're spread across the days of the week. It then compares this to the customer flow in your specific store for that specific week.</p>
            </div>
        </div>
    </div>
}
