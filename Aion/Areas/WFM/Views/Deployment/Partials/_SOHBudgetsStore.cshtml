@model Aion.Areas.WFM.ViewModels.Deployment.SOHBudgetsVm

@{
    var pageSize = 12;
    var pages = Model.Collection.GroupBy(x => x.YearWeek).Count() / pageSize + 1;
    var w = Model.WeekList.OrderBy(x => x).Take(pageSize).ToList();
}

@if (!Model.Collection.Any())
{
    <div class="alert alert-warning text-center"><strong>No budgets were found for your store. Please escalate to your RM.</strong></div>
}
else if (Model.Collection.All(x => x.Hours == null))
{
    for (int i = 1; i <= pages; i++)
    {
        <div class="row">
            <table class="table table-bordered table-sm table-smtxt text-center" style="width:@(10 + w.Count*7.5)%">
                <thead class="thead-blue">
                    <tr>
                        @foreach (var item in w)
                        {
                            <th>@string.Format("Week {0}", item.ToString().Substring(4))</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        @foreach (var item in w)
                        {
                            <td>@Model.StoreBaseSummary.FirstOrDefault(x => x.YearWeek == item).OriginalTarget</td>
                        }
                    </tr>
                </tbody>
            </table>
        </div>
        w = Model.WeekList.OrderBy(x => x).Skip(pageSize * i).Take(pageSize).ToList();
    }
}
else
{
    for (int i = 1; i <= pages; i++)
    {
        <div class="row">
            <table class="table table-bordered table-sm table-smtxt text-center" style="width:@(10 + w.Count*7.5)%">
                <thead class="thead-blue">
                    <tr>
                        <th></th>
                        @foreach (var item in w)
                        {
                            <th>@string.Format("Week {0}", item.ToString().Substring(4))</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Base Budget</td>
                        @foreach(var item in w)
                        {
                            <td>@Model.StoreBaseSummary.FirstOrDefault(x => x.YearWeek == item).OriginalTarget</td>
                        }
                    </tr>
                    @foreach (var type in Model.AdditionTypes)
                    {
                        <tr>
                            <td>@type</td>
                            @foreach (var week in w)
                            {
                                <td>@(Model.StoreAdditionSummary.FirstOrDefault(x => x.YearWeek == week && x.Type == type)?.Hours)</td>
                            }
                        </tr>
                    }
                    <tr>
                        <td><strong>Total Budget</strong></td>
                        @foreach (var week in w)
                        {
                            <td>@(Model.StoreBaseSummary.FirstOrDefault(x => x.YearWeek == week)?.OriginalTarget + Model.StoreAdditionSummary.Where(x => x.YearWeek == week).Sum(x => x.Hours))</td>
                        }
                    </tr>
                </tbody>
            </table>
        </div>
        w = Model.WeekList.OrderBy(x => x).Skip(pageSize * i).Take(pageSize).ToList();
    }
}
