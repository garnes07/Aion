//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aion.DAL.Entities
{
    using System;
    using System.Collections.Generic;
    
    public partial class TicketStub
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public TicketStub()
        {
            this.TicketAnswers = new HashSet<TicketAnswer>();
            this.TicketAudits = new HashSet<TicketAudit>();
            this.TicketComments = new HashSet<TicketComment>();
        }
    
        public int TicketId { get; set; }
        public System.DateTime DateTimeCreated { get; set; }
        public string Status { get; set; }
        public int TicketTypeId { get; set; }
        public System.DateTime LastUpdate { get; set; }
        public string RaisedBy { get; set; }
        public byte EscalationLevel { get; set; }
        public Nullable<short> BranchNumber { get; set; }
        public string LastUpdatedBy { get; set; }
        public Nullable<int> Exception { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TicketAnswer> TicketAnswers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TicketAudit> TicketAudits { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TicketComment> TicketComments { get; set; }
        public virtual TicketType TicketType { get; set; }
    }
}
